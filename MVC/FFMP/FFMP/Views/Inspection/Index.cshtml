@model IEnumerable<FFMP.Data.Inspection>
@inject IHttpContextAccessor _contxt;
@using FFMP.Data

@{ViewData["Title"] = "Inspections";}

@section Scripts {
    @{await Html.RenderPartialAsync("_Navbar");}
}

<script>$(document).ready(function () {
        var table = $('#table').DataTable({
            order: [[0, 'desc']],
        });
    });</script>

<h1 class="text-center">Inspections</h1>
<hr />
<br />
<span class="label label-primary mytooltip" title="Go to Service Objects view if you wish to create a new inspection"><img src="~/images/information.png" /></span>
<br />
<br />
<table class="table table-striped" id="table">
    <thead>
        <tr>
            <th>@Html.Raw("Created")</th>
            <th>@Html.DisplayNameFor(model => model.Reason)</th>
            <th>@Html.DisplayNameFor(model => model.Observations)</th>
            <th>@Html.DisplayName("State")</th>
            <th>@Html.DisplayNameFor(model => model.Object)</th>
            <th>@Html.DisplayName("Creator")</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.Timestamp.ToString("yyyy.MM.dd HH.mm.ss")</td>
                <td>@Html.DisplayFor(modelItem => item.Reason)</td>
                <td>@Html.DisplayFor(modelItem => item.Observations)</td>
                <td>
                    <span class="@(item.ChangeOfState == true ? "green" : "red")">
                        @if (item.ChangeOfState == true)
                            @Html.Raw("In order")
                            else if (item.ChangeOfState == false)
                                @Html.Raw("Out of order")
                    </span>
                </td>
                <td>@Html.DisplayFor(modelItem => item.Object.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.UserLoginNavigation.Name)</td>
                <td>
                    <button type="button" class="btn btn-info btn-sm" id="change" data-bs-toggle="modal"
                            data-bs-target="@("#editInsp-"+item.Id)" data-bs-url="@Url.Action($"Edit/{item.Id}")">
                        Edit
                    </button>
                    @await Html.PartialAsync("_EditPartialView", item) |
                    <button type="button" class="btn btn-info btn-sm" data-bs-toggle="modal"
                            data-bs-target="@("#detailsInsp-"+item.Id)"
                            data-bs-url="@Url.Action($"Details/{item.Id}")">
                        Details
                    </button>
                    @await Html.PartialAsync("_DetailsPartialView", item) |
                    <button type="button" class="btn btn-danger btn-sm" data-bs-toggle="modal"
                            data-bs-target="@("#deleteInsp-"+item.Id)"
                            data-bs-url="@Url.Action($"Delete/{item.Id}")">
                        Delete
                    </button>
                    @await Html.PartialAsync("_DeletePartialView", item)
                </td>
            </tr>
        }
    </tbody>
</table>
